# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget dtkCore dtkComposer dtkDistributed dtkScript dtkLog dtkMath dtkMeta dtkWidgets)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target dtkCore
add_library(dtkCore SHARED IMPORTED)

set_target_properties(dtkCore PROPERTIES
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libz.so;dtkMeta;dtkLog;Qt5::Core"
)

# Create imported target dtkComposer
add_library(dtkComposer SHARED IMPORTED)

set_target_properties(dtkComposer PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core;Qt5::Concurrent;Qt5::Gui;Qt5::Network;Qt5::Svg;Qt5::Widgets;Qt5::Xml;dtkLog;dtkCore;dtkMeta;dtkWidgets;dtkDistributed;dtkMath"
)

# Create imported target dtkDistributed
add_library(dtkDistributed SHARED IMPORTED)

set_target_properties(dtkDistributed PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core;Qt5::Network;Qt5::Xml;dtkCore;dtkMeta;dtkLog"
)

# Create imported target dtkScript
add_library(dtkScript SHARED IMPORTED)

set_target_properties(dtkScript PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core;dtkCore;dtkLog"
)

# Create imported target dtkLog
add_library(dtkLog SHARED IMPORTED)

set_target_properties(dtkLog PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core"
)

# Create imported target dtkMath
add_library(dtkMath SHARED IMPORTED)

set_target_properties(dtkMath PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core;dtkCore;dtkLog"
)

# Create imported target dtkMeta
add_library(dtkMeta SHARED IMPORTED)

set_target_properties(dtkMeta PROPERTIES
  INTERFACE_LINK_LIBRARIES "Qt5::Core"
)

# Create imported target dtkWidgets
add_library(dtkWidgets SHARED IMPORTED)

set_target_properties(dtkWidgets PROPERTIES
  INTERFACE_LINK_LIBRARIES "dtkCore;dtkLog;dtkDistributed;dtkScript;Qt5::Core;Qt5::Gui;Qt5::Widgets"
)

# Import target "dtkCore" for configuration "RelWithDebInfo"
set_property(TARGET dtkCore APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkCore PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkCore.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkCore.so.1"
  )

# Import target "dtkComposer" for configuration "RelWithDebInfo"
set_property(TARGET dtkComposer APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkComposer PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkComposer.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkComposer.so.1"
  )

# Import target "dtkDistributed" for configuration "RelWithDebInfo"
set_property(TARGET dtkDistributed APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkDistributed PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkDistributed.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkDistributed.so.1"
  )

# Import target "dtkScript" for configuration "RelWithDebInfo"
set_property(TARGET dtkScript APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkScript PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkScript.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkScript.so.1"
  )

# Import target "dtkLog" for configuration "RelWithDebInfo"
set_property(TARGET dtkLog APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkLog PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkLog.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkLog.so.1"
  )

# Import target "dtkMath" for configuration "RelWithDebInfo"
set_property(TARGET dtkMath APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkMath PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkMath.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkMath.so.1"
  )

# Import target "dtkMeta" for configuration "RelWithDebInfo"
set_property(TARGET dtkMeta APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkMeta PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkMeta.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkMeta.so.1"
  )

# Import target "dtkWidgets" for configuration "RelWithDebInfo"
set_property(TARGET dtkWidgets APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(dtkWidgets PROPERTIES
  IMPORTED_LOCATION_RELWITHDEBINFO "/home/hgj/Project/dtk_pro/dtk/build/lib/libdtkWidgets.so.1.7.1"
  IMPORTED_SONAME_RELWITHDEBINFO "libdtkWidgets.so.1"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
